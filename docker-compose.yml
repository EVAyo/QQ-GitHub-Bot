version: "3"
services:
  redis:
    image: redis:7-alpine
    environment:
      - TZ=Asia/Shanghai
      - REDIS_PASSWORD=${REDIS_PASSWORD:?err}
    command: ["sh", "-c", "redis-server --requirepass $$REDIS_PASSWORD"]
    volumes:
      - bot_redis_data:/data
    restart: always

  postgres:
    image: postgres:15-alpine
    environment:
      - POSTGRES_USER=${POSTGRES_USER:?err}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:?err}
      - POSTGRES_DB=${POSTGRES_DB:?err}
      - POSTGRES_INITDB_ARGS="--encoding=UTF8"
      - TZ=Asia/Shanghai
    volumes:
      - bot_postgres_data:/var/lib/postgresql/data
    restart: always

  nonebot:
    image: cscs181/qq-github-bot:latest # docker hub
    # image: ghcr.io/cscs181/qq-github-bot:latest # github image mirror
    # build: . # use "build" instead of "image" if you want to build the image yourself
    env_file:
      - .env
    environment:
      - ENVIRONMENT=prod
      - HOST=${HOST:-0.0.0.0}
      - PORT=${PORT:-8086}
      - MAX_WORKERS=1 # maximum workers
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
    depends_on:
      - redis
      - postgres
    deploy:
      resources:
        limits:
          memory: 1024M
        reservations:
          memory: 512M
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:${PORT:-8086}/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 30s
    restart: always

  go-cqhttp:
    image: ghcr.io/mrs4s/go-cqhttp:latest
    volumes:
      - "./bot:/data"
    depends_on:
      - nonebot
    restart: always
    profiles:
      - go-cqhttp
volumes:
  bot_redis_data: {}
  bot_postgres_data: {}
